{
	"name": "${localWorkspaceFolderBasename}",
	"initializeCommand": "bash .devcontainer/check.sh",
	"build": {
		"dockerfile": "Dockerfile",
		"args": {
			"TIMEZONE": "PRC",
			"HTTP_PROXY_HOST": "${localEnv:HTTP_PROXY_HOST}",
			"HTTP_PROXY_PORT": "${localEnv:HTTP_PROXY_PORT}",
			"http_proxy": "http://${localEnv:HTTP_PROXY_HOST}:${localEnv:HTTP_PROXY_PORT}",
			"https_proxy": "http://${localEnv:HTTP_PROXY_HOST}:${localEnv:HTTP_PROXY_PORT}",
			"HTTP_PROXY": "http://${localEnv:HTTP_PROXY_HOST}:${localEnv:HTTP_PROXY_PORT}",
			"HTTPS_PROXY": "http://${localEnv:HTTP_PROXY_HOST}:${localEnv:HTTP_PROXY_PORT}",
			"CPP": "ON",
			"JAVA": "ON"
		}
	},
	"containerEnv": {
		"DISPLAY": "${localEnv:DISPLAY}",
		"HTTP_PROXY_HOST": "${localEnv:HTTP_PROXY_HOST}",
		"HTTP_PROXY_PORT": "${localEnv:HTTP_PROXY_PORT}",
		"http_proxy": "http://${localEnv:HTTP_PROXY_HOST}:${localEnv:HTTP_PROXY_PORT}",
		"HTTP_PROXY": "http://${localEnv:HTTP_PROXY_HOST}:${localEnv:HTTP_PROXY_PORT}",
		"https_proxy": "http://${localEnv:HTTP_PROXY_HOST}:${localEnv:HTTP_PROXY_PORT}",
		"HTTPS_PROXY": "http://${localEnv:HTTP_PROXY_HOST}:${localEnv:HTTP_PROXY_PORT}"
	},
	"privileged": true,
	"capAdd": [
		"SYS_PTRACE" // for gdb attach
	],
	"securityOpt": [
		"seccomp=unconfined" // allow all syscall
	],
	"runArgs": [
		"--name=${localWorkspaceFolderBasename}",
		"--hostname=dev",
		"--network=host"
	],
	"remoteUser": "vscode", // https://aka.ms/vscode-remote/containers/non-root
	"remoteEnv": {
		"DISPLAY": "${containerEnv:DISPLAY}",
		"http_proxy": "http://${containerEnv:HTTP_PROXY_HOST}:${containerEnv:HTTP_PROXY_PORT}",
		"HTTP_PROXY": "http://${containerEnv:HTTP_PROXY_HOST}:${containerEnv:HTTP_PROXY_PORT}",
		"https_proxy": "http://${containerEnv:HTTP_PROXY_HOST}:${containerEnv:HTTP_PROXY_PORT}",
		"HTTPS_PROXY": "http://${containerEnv:HTTP_PROXY_HOST}:${containerEnv:HTTP_PROXY_PORT}"
	},
	// "workspaceMount": "type=bind,src=${localWorkspaceFolder},dst=/home/vscode/${localWorkspaceFolderBasename}",
	// "workspaceFolder": "/home/vscode/${localWorkspaceFolderBasename}",
	"mounts": [
		// "ssh -X" change inode of ".Xauthority", so it can't keep sync with host, then authentication will faild
		// https://medium.com/@jonsbun/why-need-to-be-careful-when-mounting-single-files-into-a-docker-container-4f929340834
		// "type=bind,source=${localEnv:HOME}/.Xauthority,target=/home/vscode/.Xauthority", // xauth list | tail 1
		"type=bind,source=${localEnv:HOME}/.gitconfig,target=/home/vscode/.gitconfig",
		"type=bind,source=${localEnv:HOME}/.ssh,target=/home/vscode/.ssh",
		"type=bind,source=${localEnv:HOME}/.dotfiles/templates/devcontainer,target=/workspaces/${localWorkspaceFolderBasename}/.devcontainer", // keep sync
		"type=bind,source=${localWorkspaceFolder}/.devcontainer/sbt/repositories,target=/home/vscode/.sbt/repositories",
		"type=bind,source=${localEnv:STORAGE},target=/storage" // big storage
	],
	// "dockerComposeFile": [
	//     // The order of the files is important since later files override previous ones
	//     "./compose.workspace.yaml"
	// ],
	// "service": "workspace",
	"postCreateCommand": "bash .devcontainer/postCreate.sh",
	"customizations": {
		// Configure properties specific to VS Code.
		"vscode": {
			"settings": {
				"http.proxySupport": "on",
				"dotfiles.repository": "https://github.com/ensonmj/dotfiles",
				"dotfiles.targetPath": "~/.dotfiles",
				"dotfiles.installCommand": "~/.dotfiles/install.sh",
				"editor.minimap.enabled": false,
				"files.watcherExclude": {
					"**/build-*/**": true,
					"**/_build/**": true,
					"**/target": true
				},
				"search.exclude": {
					"backends-clickhouse": true
				},
				"git.ignoreLimitWarning": true,
				"debug.focusEditorOnBreak": true,
				"clangd.arguments": [
					"--compile-commands-dir=${workspaceFolder}",
					"--completion-style=detailed",
					"--header-insertion=never"
				],
				// "clang-tidy.buildPath": "./build-Release/cpp",
				"cmake.configureOnOpen": false,
				// "cmake.configureArgs": [
				// 	"-Wno-dev"
				// ],
				// "cmake.generator": "Unix Makefiles",
				// "cmake.configureSettings": {
				// 	"CMAKE_EXPORT_COMPILE_COMMANDS": true,
				// 	"DCMAKE_BUILD_TYPE": "${buildType}"
				// },
				"java.format.enabled": false,
				// "java.project.resourceFilters": [
				//     "node_modules",
				//     ".git",
				// ],
				"xml.format.enabled": false
			},
			// Add the IDs of extensions you want installed when the container is created.
			"extensions": [
				"MS-CEINTL.vscode-language-pack-zh-hans",
				"mutantdino.resourcemonitor",
				"yzhang.markdown-all-in-one",
				"ryu1kn.partial-diff",
				"eamodio.gitlens",
				"mhutchie.git-graph",
				"GitHub.vscode-pull-request-github",
				"ms-vscode.cpptools",
				"ms-vscode.cmake-tools",
				"xaver.clang-format",
				"llvm-vs-code-extensions.vscode-clangd",
				"vscjava.vscode-java-pack",
				"scala-lang.scala",
				"scalameta.metals"
			]
		}
	}
}