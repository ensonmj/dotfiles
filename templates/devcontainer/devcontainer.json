{
	"name": "${localWorkspaceFolderBasename}",
	"initializeCommand": "bash .devcontainer/setup.sh",
	"build": {
		"dockerfile": "Dockerfile",
		"args": {
			"TIMEZONE": "PRC",
			"HTTP_PROXY_HOST": "${localEnv:HTTP_PROXY_HOST}",
			"HTTP_PROXY_PORT": "${localEnv:HTTP_PROXY_PORT}",
			"CPP": "ON",
			"JAVA": "ON"
		}
	},
	"containerEnv": {
		"DISPLAY": "${localEnv:DISPLAY}",
		"HTTP_PROXY_HOST": "${localEnv:HTTP_PROXY_HOST}",
		"HTTP_PROXY_PORT": "${localEnv:HTTP_PROXY_PORT}",
		"http_proxy": "http://${localEnv:HTTP_PROXY_HOST}:${localEnv:HTTP_PROXY_PORT}",
		"HTTP_PROXY": "http://${localEnv:HTTP_PROXY_HOST}:${localEnv:HTTP_PROXY_PORT}",
		"https_proxy": "http://${localEnv:HTTP_PROXY_HOST}:${localEnv:HTTP_PROXY_PORT}",
		"HTTPS_PROXY": "http://${localEnv:HTTP_PROXY_HOST}:${localEnv:HTTP_PROXY_PORT}"
	},
	"privileged": true,
	"capAdd": [
		"SYS_PTRACE" // for gdb attach
	],
	"securityOpt": [
		"seccomp=unconfined" // allow all syscall
	],
	"runArgs": [
		"--hostname=dev",
		"--network=host"
	],
	"remoteUser": "vscode", // https://aka.ms/vscode-remote/containers/non-root
	"remoteEnv": {
		"DISPLAY": "${containerEnv:DISPLAY}",
		"http_proxy": "http://${containerEnv:HTTP_PROXY_HOST}:${containerEnv:HTTP_PROXY_PORT}",
		"HTTP_PROXY": "http://${containerEnv:HTTP_PROXY_HOST}:${containerEnv:HTTP_PROXY_PORT}",
		"https_proxy": "http://${containerEnv:HTTP_PROXY_HOST}:${containerEnv:HTTP_PROXY_PORT}",
		"HTTPS_PROXY": "http://${containerEnv:HTTP_PROXY_HOST}:${containerEnv:HTTP_PROXY_PORT}"
	},
	// "workspaceMount": "type=bind,src=${localWorkspaceFolder},dst=/home/vscode/${localWorkspaceFolderBasename}",
	// "workspaceFolder": "/home/vscode/${localWorkspaceFolderBasename}",
	"mounts": [
		"type=bind,source=${localEnv:HOME}/.Xauthority,target=/home/vscode/.Xauthority", // xauth list | tail 1
		"type=bind,source=${localEnv:HOME}/.gitconfig,target=/home/vscode/.gitconfig",
		"type=bind,source=${localEnv:HOME}/.ssh,target=/home/vscode/.ssh",
		"type=bind,source=${localEnv:HOME}/.m2,target=/home/vscode/.m2",
		"type=bind,source=${localEnv:HOME}/.sbt,target=/home/vscode/.sbt",
		"type=bind,source=${localEnv:HOME}/.cache,target=/home/vscode/.cache",
		"type=bind,source=${localEnv:STORAGE},target=/storage", // big storage
		"type=bind,source=/tmp,target=/tmp",
		"type=bind,source=/tmp/.X11-unix,target=/tmp/.X11-unix"
	],
	// "dockerComposeFile": [
	//     // The order of the files is important since later files override previous ones
	//     "./compose.workspace.yaml"
	// ],
	// "service": "workspace",
	"postCreateCommand": "bash .devcontainer/postCreate.sh",
	"customizations": {
		// Configure properties specific to VS Code.
		"vscode": {
			"settings": {
				"editor.minimap.enabled": false,
				"http.proxySupport": "on",
				"dotfiles.repository": "https://github.com/ensonmj/dotfiles",
				"dotfiles.targetPath": "~/.dotfiles"
				// "dotfiles.installCommand": "~/.dotfiles/install.sh",
				// "cmake.configureOnOpen": false,
				// "cmake.configureArgs": [
				// 	"-Wno-dev"
				// ],
				// "cmake.generator": "Unix Makefiles",
				// "cmake.configureSettings": {
				// 	"CMAKE_EXPORT_COMPILE_COMMANDS": true,
				// 	// "DCMAKE_BUILD_TYPE": "${buildType}"
				// 	"ENABLE_FOLLY": "OFF",
				// 	"ENABLE_JIT_DEBUG": "OFF",
				// 	"ENABLE_PERF_JIT_LISTENER": "OFF",
				// 	"ENABLE_INTEL_JIT_LISTENER": "OFF",
				// 	"PREFER_STATIC_LIBS": "OFF",
				// 	"VELOX_ENABLE_SUBSTRAIT": "ON",
				// 	"VELOX_ENABLE_PARQUET": "ON"
				// },
				// "testMate.cpp.debug.configTemplate": {
				// 	"type": "cppvsdbg",
				// 	"linux": {
				// 		"type": "cppdbg",
				// 		"MIMode": "gdb",
				// 		"setupCommands": [
				// 			{
				// 				"description": "Enable pretty-printing for gdb",
				// 				"text": "-enable-pretty-printing",
				// 				"ignoreFailures": true
				// 			},
				// 			{
				// 				"description": "Auto load symbols when loading an .so file",
				// 				"text": "set auto-solib-add",
				// 				"ignoreFailures": false
				// 			},
				// 			{
				// 				"description": "ptype obj",
				// 				"text": "set print object on",
				// 				"ignoreFailures": false
				// 			}
				// 		]
				// 	},
				// 	"darwin": {
				// 		"type": "cppdbg",
				// 		"MIMode": "lldb"
				// 	},
				// 	"win32": {
				// 		"type": "cppvsdbg"
				// 	},
				// 	"program": "${exec}",
				// 	"args": "${argsArray}",
				// 	"cwd": "${cwd}",
				// 	"env": "${envObj}",
				// 	"environment": "${envObjArray}",
				// 	"sourceFileMap": "${sourceFileMapObj}"
				// },
				// "githubPullRequests.ignoredPullRequestBranches": [
				// 	"main"
				// ],
				// "search.exclude": {
				// 	// "**/presto": true
				// },
				// "files.exclude": {
				// 	// "**/presto": true
				// },
				// "files.watcherExclude": {
				// 	// "**/build-*/**": true,
				// },
				// "C_Cpp.files.exclude": {
				// 	// "**/presto": true,
				// 	// "**/.vscode": true
				// },
				// "C_Cpp.codeAnalysis.exclude": {
				// 	// "**/presto": true
				// },
				// "debug.focusEditorOnBreak": true,
				// "git.ignoreLimitWarning": true,
				// "clangd.arguments": [
				// 	"--compile-commands-dir=${workspaceFolder}/build-Release/cpp",
				// 	"--completion-style=detailed",
				// 	"--header-insertion=never"
				// ],
				// "clang-tidy.buildPath": "./build-Release/cpp",
				// "java.project.resourceFilters": [
				//     "node_modules",
				//     ".git",
				// ],
				// "java.format.enabled": false,
				// "xml.format.enabled": false
			},
			// Add the IDs of extensions you want installed when the container is created.
			"extensions": [
				"MS-CEINTL.vscode-language-pack-zh-hans",
				"mutantdino.resourcemonitor",
				"yzhang.markdown-all-in-one",
				"ryu1kn.partial-diff",
				"eamodio.gitlens",
				"mhutchie.git-graph",
				"GitHub.vscode-pull-request-github",
				"ms-vscode.cpptools",
				"ms-vscode.cmake-tools",
				"xaver.clang-format",
				"llvm-vs-code-extensions.vscode-clangd",
				"vscjava.vscode-java-pack",
				"scala-lang.scala",
				"scalameta.metals"
			]
		}
	}
}
